{"ast":null,"code":"import { GET_CUSTOMERS, SET_LOADING, ADD_CUSTOMER, SET_LOADINGFORM, DELETE_CUSTOMER, SET_CUSTOMER, CLEAR_CURRENT, FILTER_CUSTOMERS, CLEAR_FILTER } from \"../types.js\";\nimport axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080/\"\n});\n\nasync function ajax(dispatch, method, url, data) {\n  try {\n    dispatch({\n      type: SET_LOADING,\n      payload: true\n    });\n    const response = await instance[method](url, data);\n    return response;\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    });\n  }\n}\n\nexport const getCustomers = () => async dispatch => {\n  const res = await ajax(dispatch, \"get\", \"/customers\");\n  dispatch({\n    type: GET_CUSTOMERS,\n    payload: res.data\n  });\n};\nexport const postCustomer = customer => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADINGFORM\n    });\n    const res = await instance.post(\"/customers\", customer);\n    dispatch({\n      type: ADD_CUSTOMER,\n      payload: res.data.data\n    });\n  } catch (error) {\n    console.log(error);\n  } finally {}\n\n  try {\n    const res = await instance.get(\"/customers\");\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data\n    });\n  } catch (error) {}\n};\nexport const deleteCustomer = id => async dispatch => {\n  try {\n    await instance.delete(`/customers/${id}`);\n    dispatch({\n      type: DELETE_CUSTOMER,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setCustomer = customer => dispatch => {\n  dispatch({\n    type: SET_CUSTOMER,\n    payload: customer\n  });\n};\nexport const clearCurrent = () => dispatch => {\n  dispatch({\n    type: CLEAR_CURRENT\n  });\n};\nexport const filterCustomers = text => dispatch => {\n  dispatch({\n    type: FILTER_CUSTOMERS,\n    payload: text\n  });\n};\nexport const clearFilter = () => dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};","map":{"version":3,"sources":["/Users/mbowler/Desktop/customerkeeper/client/src/redux/actions/customerActions.js"],"names":["GET_CUSTOMERS","SET_LOADING","ADD_CUSTOMER","SET_LOADINGFORM","DELETE_CUSTOMER","SET_CUSTOMER","CLEAR_CURRENT","FILTER_CUSTOMERS","CLEAR_FILTER","axios","instance","create","baseURL","ajax","dispatch","method","url","data","type","payload","response","getCustomers","res","postCustomer","customer","post","error","console","log","get","deleteCustomer","id","delete","setCustomer","clearCurrent","filterCustomers","text","clearFilter"],"mappings":"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","sourcesContent":["import {\n  GET_CUSTOMERS,\n  SET_LOADING,\n  ADD_CUSTOMER,\n  SET_LOADINGFORM,\n  DELETE_CUSTOMER,\n  SET_CUSTOMER,\n  CLEAR_CURRENT,\n  FILTER_CUSTOMERS,\n  CLEAR_FILTER,\n} from \"../types.js\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080/\",\n});\nasync function ajax(dispatch, method, url, data) {\n  try {\n\n    dispatch({\n      type: SET_LOADING,\n      payload: true,\n\n    });\n    const response = await instance[method](url, data);\n    return response;\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false,\n    });\n  }\n}\nexport const getCustomers = () => async (dispatch) => {\n  const res = await ajax(dispatch, \"get\", \"/customers\");\n  dispatch({\n    type: GET_CUSTOMERS,\n    payload: res.data,\n  });\n};\n\nexport const postCustomer = (customer) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_LOADINGFORM,\n    });\n    const res = await instance.post(\"/customers\", customer);\n    dispatch({\n      type: ADD_CUSTOMER,\n      payload: res.data.data,\n    });\n  } catch (error) {\n    console.log(error);\n  } finally {\n  }\n  try {\n    const res = await instance.get(\"/customers\");\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data,\n    });\n  } catch (error) {}\n};\n\nexport const deleteCustomer = (id) => async (dispatch) => {\n  try {\n    await instance.delete(`/customers/${id}`);\n    dispatch({\n      type: DELETE_CUSTOMER,\n      payload: id,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setCustomer = (customer) => (dispatch) => {\n  dispatch({\n    type: SET_CUSTOMER,\n    payload: customer,\n  });\n};\n\nexport const clearCurrent = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_CURRENT,\n  });\n};\n\nexport const filterCustomers = (text) => (dispatch) => {\n  dispatch({ type: FILTER_CUSTOMERS, payload: text });\n};\n\nexport const clearFilter = () => (dispatch) => {\n  dispatch({ type: CLEAR_FILTER });\n};\n"]},"metadata":{},"sourceType":"module"}