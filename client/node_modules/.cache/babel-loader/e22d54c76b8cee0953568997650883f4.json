{"ast":null,"code":"var _jsxFileName = \"/Users/mbowler/Desktop/card copy/client/src/components/contacts/ContactForm.js\";\n\n/* eslint-disable react/jsx-no-duplicate-props */\nimport React, { useState, useEffect } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { connect } from 'react-redux';\nimport { postContact, clearCurrent } from '../../redux/actions/customerActions';\nimport FormLoader from './FormLoading';\nimport Alert from '../layouts/Alert.js';\nimport '../../styles/customerForm.css';\n\nconst ContactForm = ({\n  loading,\n  current,\n  error_msg,\n  alert_error,\n  postCustomer,\n  closeError,\n  clearCurrent\n}) => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    abilities: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    abilities,\n    type\n  } = contact;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        abilities: '',\n        type: 'personal'\n      });\n    }\n  }, [current]);\n\n  const onChange = e => setCustomer({ ...customer,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      abilities: '',\n      type: 'personal'\n    });\n    postContact(contact);\n  };\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    left: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, current ? 'Edit Contact' : 'Add Contact'), loading && /*#__PURE__*/React.createElement(FormLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), alert_error && /*#__PURE__*/React.createElement(Alert, {\n    error_msg: error_msg,\n    closeError: closeError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name-input\",\n    className: \"form-control\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Preferred first and last name.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    className: \"form-control\",\n    id: \"email-input\",\n    placeholder: \"email@example.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phone-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    className: \"form-control\",\n    id: \"phone-input\",\n    placeholder: \"ex: 222111333\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), phone && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 67\n    }\n  }, \"max: \"), 9 - phone.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"skills-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Abilites\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"skills-input\",\n    name: \"abilities\",\n    value: abilities,\n    onChange: onChange,\n    rows: \"5\",\n    placeholder: \"your skills...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), abilities && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 71\n    }\n  }, \"max: \"), 250 - abilities.length)), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    style: {\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Contact Types\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    onChange: onChange,\n    checked: type === 'personal',\n    value: type,\n    name: \"type\",\n    id: \"personal-input\",\n    value: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"personal-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Personal\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"type\",\n    onChange: onChange,\n    checked: type === 'professional',\n    value: type,\n    id: \"professional-input\",\n    value: \"professional\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"professional-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Professional\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update' : 'Submit',\n    id: \"btn\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), current && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    onClick: clearCurrent,\n    value: \"Cancel\",\n    id: \"btn-cancel\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  loading: state.contact.loadingForm,\n  alert_error: state.contact.alert_error,\n  error_msg: state.contact.error_msg,\n  current: state.contact.current\n});\n\nexport default connect(mapStateToProps, {\n  postContact,\n  clearCurrent\n})(ContactForm);","map":{"version":3,"sources":["/Users/mbowler/Desktop/card copy/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useEffect","Fade","connect","postContact","clearCurrent","FormLoader","Alert","ContactForm","loading","current","error_msg","alert_error","postCustomer","closeError","contact","setContact","name","email","phone","abilities","type","onChange","e","setCustomer","customer","target","value","onSubmit","preventDefault","length","marginBottom","mapStateToProps","state","loadingForm"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-duplicate-props */\nimport React, {useState, useEffect} from 'react'\nimport Fade from 'react-reveal/Fade'\nimport {connect} from 'react-redux'\nimport {postContact, clearCurrent} from '../../redux/actions/customerActions'\nimport FormLoader from './FormLoading'\nimport Alert from '../layouts/Alert.js'\nimport '../../styles/customerForm.css'\n\nconst ContactForm = ({loading, current, error_msg, alert_error, postCustomer, closeError, clearCurrent}) => {\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        abilities: '',\n        type: 'personal'\n    })\n\n    const { name, email, phone, abilities, type } = contact\n\n    useEffect(()=>{\n        if(current !== null){\n            setContact(current)\n        }else{\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                abilities: '',\n                type: 'personal'\n            })\n        }\n    }, [current])\n\n    const onChange = e => setCustomer({...customer, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault()\n        setContact({\n            name: '',\n            email: '',\n            phone: '',\n            abilities: '',\n            type: 'personal'\n        })\n        postContact(contact)\n    }\n\n    return (\n        <Fade left>\n        <div className=\"contact-form\">\n            <h3>{current? 'Edit Contact': 'Add Contact'}</h3>\n            {loading && <FormLoader/>}\n            {alert_error && <Alert error_msg={error_msg} closeError={closeError}/>} \n            <form onSubmit={onSubmit}>\n             <div className=\"form-group\">\n                    <label htmlFor=\"name-input\">Name</label>\n                    <input \n                    type=\"text\" \n                    id=\"name-input\" \n                    className=\"form-control\"\n                    name=\"name\"\n                    value={name}\n                    onChange={onChange}\n                    placeholder=\"Your name\"/>\n                <small className=\"form-text text-muted\">Preferred first and last name.</small>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"email-input\">Email address</label>\n                <input \n                type=\"email\" \n                name=\"email\"\n                value={email}\n                onChange={onChange}\n                className=\"form-control\" \n                id=\"email-input\" \n                placeholder=\"email@example.com\"/>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"phone-input\">Phone</label>\n                <input \n                type=\"number\" \n                name=\"phone\"\n                value={phone}\n                onChange={onChange}\n                className=\"form-control\" \n                id=\"phone-input\" \n                placeholder=\"ex: 222111333\"/>\n                {phone && <small className=\"form-text text-muted\"><strong>max: </strong>{9 - phone.length}</small>}\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"skills-input\">Abilites</label>\n                <textarea \n                className=\"form-control\" \n                id=\"skills-input\" \n                name=\"abilities\"\n                value={abilities}\n                onChange={onChange}\n                rows=\"5\" \n                placeholder=\"your skills...\"></textarea>\n                {abilities && <small className=\"form-text text-muted\"><strong>max: </strong>{250 - abilities.length}</small>}\n            </div>\n                <small className=\"form-text text-muted\" style={{marginBottom: '5px'}}>Contact Types</small>\n            <div className=\"form-check form-check-inline\">\n                <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                onChange={onChange}\n                checked={type === 'personal'}\n                value={type}\n                name=\"type\" \n                id=\"personal-input\" \n                value=\"personal\"/>\n                <label className=\"form-check-label\" htmlFor=\"personal-input\">Personal</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n                <input \n                className=\"form-check-input\" \n                type=\"radio\"  \n                name=\"type\"\n                onChange={onChange}\n                checked={type === 'professional'}\n                value={type}\n                id=\"professional-input\" \n                value=\"professional\"/>\n                <label className=\"form-check-label\" htmlFor=\"professional-input\">Professional</label>\n            </div>\n                <input type=\"submit\" value={current?'Update':'Submit'} id=\"btn\" className=\"btn btn-primary\"/>\n                {current && <input type=\"submit\" onClick={clearCurrent} value=\"Cancel\" id=\"btn-cancel\" className=\"btn btn-primary\" />}\n            </form>\n        </div>\n        </Fade>\n    )\n}\nconst mapStateToProps = state => ({\n  loading: state.contact.loadingForm,\n  alert_error: state.contact.alert_error,\n  error_msg: state.contact.error_msg,\n  current: state.contact.current\n});\nexport default connect(mapStateToProps, {postContact, clearCurrent})(ContactForm)\n"]},"metadata":{},"sourceType":"module"}