{"ast":null,"code":"import { GET_CONTACTS, SET_LOADING, ADD_CONTACT, SET_LOADINGFORM, DELETE_CUSTOMER, SET_CUSTOMER, CLEAR_CURRENT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\nconst initialState = {\n  contacts: [],\n  current: null,\n  filtered: null,\n  loading: false,\n  loadingForm: false,\n  alert_error: false,\n  error_msg: ''\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [action.payload, ...state.contacts],\n        loadingForm: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(current => current.id !== action.payload)\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_CONTACT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SET_LOADINGFORM:\n      return { ...state,\n        loadingForm: true\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mbowler/Desktop/card copy/client/src/redux/reducers/contact.js"],"names":["GET_CONTACTS","SET_LOADING","ADD_CONTACT","SET_LOADINGFORM","DELETE_CUSTOMER","SET_CUSTOMER","CLEAR_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","initialState","contacts","current","filtered","loading","loadingForm","alert_error","error_msg","state","action","type","payload","DELETE_CONTACT","filter","id","SET_CONTACT","contact","regex","RegExp","name","match","email"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAEiBC,WAFjB,EAGIC,eAHJ,EAIIC,eAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,eAPJ,EAQIC,YARJ,QAQuB,UARvB;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,QAAQ,EAAE,IAHO;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,WAAW,EAAE,KALI;AAMjBC,EAAAA,WAAW,EAAE,KANI;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;AAUA,gBAAe,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAgC;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,YAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHP,QAAAA,QAAQ,EAAEQ,MAAM,CAACE,OAFd;AAGHP,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHP,QAAAA,QAAQ,EAAE,CAACQ,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACP,QAA1B,CAFP;AAGHI,QAAAA,WAAW,EAAE;AAHV,OAAP;;AAKJ,SAAKO,cAAL;AACI,aAAM,EACF,GAAGJ,KADD;AAEFP,QAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeY,MAAf,CAAsBX,OAAO,IAAIA,OAAO,CAACY,EAAR,KAAeL,MAAM,CAACE,OAAvD;AAFR,OAAN;;AAIJ,SAAKnB,WAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKW,WAAL;AACI,aAAO,EACH,GAAGP,KADA;AAEHN,QAAAA,OAAO,EAAEO,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAKd,aAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHN,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHH,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ,SAAKP,eAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,QAAQ,EAAEK,KAAK,CAACP,QAAN,CAAeY,MAAf,CAAsBG,OAAO,IAAG;AACtC,gBAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAET,MAAM,CAACE,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOK,OAAO,CAACG,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BD,OAAO,CAACK,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHS;AAFP,OAAP;;AAOJ,SAAKlB,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ;AACI,aAAOK,KAAP;AArDR;AAuDH,CAxDD","sourcesContent":["import { \n    GET_CONTACTS, \n    SET_LOADING, ADD_CONTACT, \n    SET_LOADINGFORM, \n    DELETE_CUSTOMER,\n    SET_CUSTOMER,\n    CLEAR_CURRENT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER} from \"../types\"\n\nconst initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    loading: false,\n    loadingForm: false,\n    alert_error: false,\n    error_msg: '',\n}\n\nexport default (state = initialState, action)=>{\n    switch(action.type){\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts],\n                loadingForm: false\n            }\n        case DELETE_CONTACT:\n            return{\n                ...state,\n                contacts: state.contacts.filter(current => current.id !== action.payload)\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case SET_CONTACT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case SET_LOADINGFORM:\n            return {\n                ...state,\n                loadingForm: true\n            }\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact =>{\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return contact.name.match(regex) || contact.email.match(regex)\n                })\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}