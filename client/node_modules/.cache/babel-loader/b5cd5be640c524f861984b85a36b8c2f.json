{"ast":null,"code":"import { GET_CUSTOMERS, SET_LOADING, ADD_CUSTOMER, SET_LOADINGFORM, DELETE_CUSTOMER, SET_CUSTOMER, CLEAR_CURRENT, FILTER_CUSTOMERS, CLEAR_FILTER } from \"../types.js\";\nimport axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080/\"\n});\nexport const getCustomers = () => async dispatch => {\n  try {\n    //loading true\n    dispatch({\n      type: SET_LOADING\n    });\n    const res = await instance.get(\"/customers\");\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data\n    });\n  } finally {}\n};\nexport const postCustomer = customer => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADINGFORM\n    });\n    const res = await instance.post(\"/customers\", customer);\n    dispatch({\n      type: ADD_CUSTOMER,\n      payload: res.data.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  try {\n    const res = await instance.get(\"/customers\");\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data\n    });\n  } catch (error) {}\n};\nexport const deleteCustomer = id => async dispatch => {\n  try {\n    await instance.delete(`/customers/${id}`);\n    dispatch({\n      type: DELETE_CUSTOMER,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setCustomer = customer => dispatch => {\n  dispatch({\n    type: SET_CUSTOMER,\n    payload: customer\n  });\n};\nexport const clearCurrent = () => dispatch => {\n  dispatch({\n    type: CLEAR_CURRENT\n  });\n};\nexport const filterCustomers = text => dispatch => {\n  dispatch({\n    type: FILTER_CUSTOMERS,\n    payload: text\n  });\n};\nexport const clearFilter = () => dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};","map":{"version":3,"sources":["/Users/mbowler/Desktop/customerkeeper/client/src/redux/actions/customerActions.js"],"names":["GET_CUSTOMERS","SET_LOADING","ADD_CUSTOMER","SET_LOADINGFORM","DELETE_CUSTOMER","SET_CUSTOMER","CLEAR_CURRENT","FILTER_CUSTOMERS","CLEAR_FILTER","axios","instance","create","baseURL","getCustomers","dispatch","type","res","get","payload","data","postCustomer","customer","post","error","console","log","deleteCustomer","id","delete","setCustomer","clearCurrent","filterCustomers","text","clearFilter"],"mappings":"AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,gBARF,EASEC,YATF,QAWO,aAXP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACF;AACAA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAIA,UAAMe,GAAG,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAa,YAAb,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,aADC;AAEPkB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAKD,GAZD,SAYU,CAET;AACF,CAhBM;AAkBP,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAOP,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGA,UAAMa,GAAG,GAAG,MAAMN,QAAQ,CAACY,IAAT,CAAc,YAAd,EAA4BD,QAA5B,CAAlB;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,YADC;AAEPgB,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASA;AAFX,KAAD,CAAR;AAKD,GAVD,CAUE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,MAAI;AACF,UAAMP,GAAG,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAa,YAAb,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,aADC;AAEPkB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAKD,GAPD,CAOE,OAAOI,KAAP,EAAc,CAEf;AACF,CAzBM;AA6BP,OAAO,MAAMG,cAAc,GAAIC,EAAD,IAAQ,MAAOb,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMJ,QAAQ,CAACkB,MAAT,CAAiB,cAAaD,EAAG,EAAjC,CAAN;AACAb,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,eADC;AAEPc,MAAAA,OAAO,EAAES;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMM,WAAW,GAAIR,QAAD,IAAeP,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEV,YADC;AAEPa,IAAAA,OAAO,EAAEG;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMS,YAAY,GAAG,MAAOhB,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAET;AADC,GAAD,CAAR;AAGD,CAJM;AAMP,OAAO,MAAMyB,eAAe,GAAIC,IAAD,IAAWlB,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,gBAAR;AAA0BW,IAAAA,OAAO,EAAEc;AAAnC,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAG,MAAOnB,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import {\n  GET_CUSTOMERS,\n  SET_LOADING,\n  ADD_CUSTOMER,\n  SET_LOADINGFORM,\n  DELETE_CUSTOMER,\n  SET_CUSTOMER,\n  CLEAR_CURRENT,\n  FILTER_CUSTOMERS,\n  CLEAR_FILTER,\n \n} from \"../types.js\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080/\",\n});\nexport const getCustomers = () => async (dispatch) => {\n  try {\n    //loading true\n    dispatch({\n      type: SET_LOADING,\n    });\n\n    const res = await instance.get(\"/customers\");\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data,\n     \n    });\n  } finally {\n    \n  }\n};\n\nexport const postCustomer = (customer) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_LOADINGFORM,\n    });\n    const res = await instance.post(\"/customers\", customer);\n    dispatch({\n      type: ADD_CUSTOMER,\n      payload: res.data.data,\n    });\n    \n  } catch (error) {\n    console.log(error);\n  }\n  \n  try {\n    const res = await instance.get(\"/customers\");\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data,\n     \n    });\n  } catch (error) {\n\n  }\n};\n\n\n\nexport const deleteCustomer = (id) => async (dispatch) => {\n  try {\n    await instance.delete(`/customers/${id}`);\n    dispatch({\n      type: DELETE_CUSTOMER,\n      payload: id,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setCustomer = (customer) => (dispatch) => {\n  dispatch({\n    type: SET_CUSTOMER,\n    payload: customer,\n  });\n};\n\nexport const clearCurrent = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_CURRENT,\n  });\n};\n\nexport const filterCustomers = (text) => (dispatch) => {\n  dispatch({ type: FILTER_CUSTOMERS, payload: text });\n};\n\nexport const clearFilter = () => (dispatch) => {\n  dispatch({ type: CLEAR_FILTER });\n};\n"]},"metadata":{},"sourceType":"module"}