{"ast":null,"code":"import { GET_CUSTOMERS, SET_LOADING, ADD_CUSTOMER, SET_LOADINGFORM, DELETE_CUSTOMER, SET_CUSTOMER, CLEAR_CURRENT, FILTER_CUSTOMERS, CLEAR_FILTER } from '../types.js';\nimport axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:3000/api'\n});\nexport const getCustomers = () => async dispatch => {\n  try {\n    //loading true\n    dispatch({\n      type: SET_LOADING\n    });\n    const res = await instance.get('/customers');\n    dispatch({\n      type: GET_CUSTOMERS,\n      payload: res.data\n    });\n  } catch (error) {}\n};\nexport const postCustomer = customer => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADINGFORM\n    });\n    const res = await instance.post('/customers', customer);\n    dispatch({\n      type: ADD_CUSTOMER,\n      payload: res.data.data\n    });\n  } catch (error) {}\n};\nexport const deleteCustomer = id => async dispatch => {\n  try {\n    await instance.delete(`/customer/${id}`);\n    dispatch({\n      type: DELETE_CUSTOMER,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setCustomer = customer => dispatch => {\n  dispatch({\n    type: SET_CUSTOMER,\n    payload: customer\n  });\n};\nexport const clearCurrent = () => dispatch => {\n  dispatch({\n    type: CLEAR_CURRENT\n  });\n};\nexport const filterCustomers = text => dispatch => {\n  dispatch({\n    type: FILTER_CUSTOMERS,\n    payload: text\n  });\n};\nexport const clearFilter = () => dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};","map":{"version":3,"sources":["/Users/mbowler/Desktop/card copy/client/src/redux/actions/customerActions.js"],"names":["GET_CUSTOMERS","SET_LOADING","ADD_CUSTOMER","SET_LOADINGFORM","DELETE_CUSTOMER","SET_CUSTOMER","CLEAR_CURRENT","FILTER_CUSTOMERS","CLEAR_FILTER","axios","instance","create","baseURL","getCustomers","dispatch","type","res","get","payload","data","error","postCustomer","customer","post","deleteCustomer","id","delete","console","log","setCustomer","clearCurrent","filterCustomers","text","clearFilter"],"mappings":"AAAA,SACIA,aADJ,EAEIC,WAFJ,EAGIC,YAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,YANJ,EAOIC,aAPJ,EAQIC,gBARJ,EASIC,YATJ,QAUO,aAVP;AAWA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,MAAI;AACA;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAIA,UAAMe,GAAG,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAa,YAAb,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEf,aADD;AAELkB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAXD,CAWE,OAAOC,KAAP,EAAc,CAEf;AACJ,CAfM;AAiBP,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAMR,QAAN,IAAiB;AACvD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGA,UAAMa,GAAG,GAAG,MAAMN,QAAQ,CAACa,IAAT,CAAc,YAAd,EAA4BD,QAA5B,CAAlB;AACAR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb,YADD;AAELgB,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASA;AAFb,KAAD,CAAR;AAIH,GATD,CASE,OAAOC,KAAP,EAAc,CAEX;AAEJ,CAdE;AAgBP,OAAO,MAAMI,cAAc,GAAIC,EAAD,IAAO,MAAMX,QAAN,IAAgB;AACjD,MAAI;AACA,UAAMJ,QAAQ,CAACgB,MAAT,CAAiB,aAAYD,EAAG,EAAhC,CAAN;AACAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX,eADD;AAELc,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAKH,GAPD,CAOE,OAAOL,KAAP,EAAc;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMS,WAAW,GAAIP,QAAD,IAAaR,QAAQ,IAAE;AAC9CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEV,YADD;AAELa,IAAAA,OAAO,EAAEI;AAFJ,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMQ,YAAY,GAAG,MAAKhB,QAAQ,IAAE;AACvCA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAET;AADD,GAAD,CAAR;AAGH,CAJM;AAMP,OAAO,MAAMyB,eAAe,GAAGC,IAAI,IAAIlB,QAAQ,IAAE;AAC7CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER,gBAAP;AAAyBW,IAAAA,OAAO,EAAEc;AAAlC,GAAD,CAAR;AACH,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAG,MAAKnB,QAAQ,IAAE;AACtCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;AACH,CAFM","sourcesContent":["import {\n    GET_CUSTOMERS, \n    SET_LOADING, \n    ADD_CUSTOMER, \n    SET_LOADINGFORM, \n    DELETE_CUSTOMER,\n    SET_CUSTOMER,\n    CLEAR_CURRENT,\n    FILTER_CUSTOMERS,\n    CLEAR_FILTER\n} from '../types.js'\nimport axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:3000/api'\n})\nexport const getCustomers = () => async dispatch => {\n    try {\n        //loading true\n        dispatch({\n            type: SET_LOADING\n        })\n        \n        const res = await instance.get('/customers')\n        dispatch({\n            type: GET_CUSTOMERS,\n            payload: res.data\n        })\n    } catch (error) {\n        \n    }\n}\n\nexport const postCustomer = (customer) => async dispatch =>{\n    try {\n        dispatch({\n            type: SET_LOADINGFORM\n        })\n        const res = await instance.post('/customers', customer)\n        dispatch({\n            type: ADD_CUSTOMER,\n            payload: res.data.data\n        })\n    } catch (error) {\n       \n        }\n        \n    }\n\nexport const deleteCustomer = (id)=> async dispatch=>{\n    try {\n        await instance.delete(`/customer/${id}`)       \n        dispatch({\n            type: DELETE_CUSTOMER,\n            payload: id\n        })\n    \n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const setCustomer = (customer)=> dispatch=>{\n    dispatch({\n        type: SET_CUSTOMER,\n        payload: customer\n    })\n}\n\nexport const clearCurrent = ()=> dispatch=>{\n    dispatch({\n        type: CLEAR_CURRENT\n    })\n}\n\nexport const filterCustomers = text => dispatch=>{\n    dispatch({type: FILTER_CUSTOMERS, payload: text})\n}\n\nexport const clearFilter = ()=> dispatch=>{\n    dispatch({type: CLEAR_FILTER})\n}"]},"metadata":{},"sourceType":"module"}