{"ast":null,"code":"var _jsxFileName = \"/Users/mbowler/Desktop/customerkeeper/client/src/components/customers/Customers.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCustomers, deleteCustomer, setCustomer, filterCustomers, clearFilter } from \"../../redux/actions/customerActions\";\nimport CustomerItem from \"./CustomerItem\";\nimport PreLoader from \"../layouts/PreLoader\";\nimport CustomerFilter from \"./CustomerFilter\";\n\nconst Customers = ({\n  state: {\n    customers,\n    loading,\n    filtered\n  },\n  getCustomers,\n  deleteCustomer,\n  filterCustomers,\n  clearFilter,\n  setCustomer\n}) => {\n  useEffect(() => {\n    getCustomers(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || customers === []) {\n    return /*#__PURE__*/React.createElement(PreLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (customers.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, \"Please add a customer...\");\n  }\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomerFilter, {\n    filterCustomers: filterCustomers,\n    clearFilter: clearFilter,\n    filtered: filtered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), filtered !== null ? filtered.map(data => /*#__PURE__*/React.createElement(CustomerItem, {\n    key: data.id,\n    id: data.id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    address: data.address,\n    address2: data.address2,\n    city: data.city,\n    state: data.state,\n    zip: data.zip,\n    email: data.email,\n    phone: data.phone,\n    deleteCustomer: deleteCustomer,\n    setCustomer: setCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })) : customers.map(data => /*#__PURE__*/React.createElement(CustomerItem, {\n    key: data.id,\n    _id: data.id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    email: data.email,\n    phone: data.phone,\n    address: data.address,\n    address2: data.address2,\n    city: data.city,\n    state: data.state,\n    zip: data.zip,\n    deleteCustomer: deleteCustomer,\n    setCustomer: setCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  state: state.customer\n});\n\nexport default connect(mapStateToProps, {\n  getCustomers,\n  deleteCustomer,\n  setCustomer,\n  filterCustomers,\n  clearFilter\n})(Customers);","map":{"version":3,"sources":["/Users/mbowler/Desktop/customerkeeper/client/src/components/customers/Customers.js"],"names":["React","useEffect","connect","getCustomers","deleteCustomer","setCustomer","filterCustomers","clearFilter","CustomerItem","PreLoader","CustomerFilter","Customers","state","customers","loading","filtered","length","display","flexDirection","map","data","id","first_name","last_name","address","address2","city","zip","email","phone","mapStateToProps","customer"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getCustomers,\n  deleteCustomer,\n  setCustomer,\n  filterCustomers,\n  clearFilter,\n} from \"../../redux/actions/customerActions\";\nimport CustomerItem from \"./CustomerItem\";\nimport PreLoader from \"../layouts/PreLoader\";\nimport CustomerFilter from \"./CustomerFilter\";\n\nconst Customers = ({\n  state: { customers, loading, filtered },\n  getCustomers,\n  deleteCustomer,\n  filterCustomers,\n  clearFilter,\n  setCustomer,\n}) => {\n  useEffect(() => {\n    getCustomers();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || customers === []) {\n    return <PreLoader />;\n  }\n\n  if (customers.length === 0) {\n    return <h4 className=\"loader\">Please add a customer...</h4>;\n  }\n  return (\n    <InfiniteScroll>  \n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <CustomerFilter\n        filterCustomers={filterCustomers}\n        clearFilter={clearFilter}\n        filtered={filtered}\n      />\n      {filtered !== null\n        ? filtered.map((data) => (\n            <CustomerItem\n              key={data.id}\n              id={data.id}\n              first_name={data.first_name}\n              last_name={data.last_name}\n              address={data.address}\n              address2={data.address2}\n              city={data.city}\n              state={data.state}\n              zip={data.zip}\n              email={data.email}\n              phone={data.phone}\n              deleteCustomer={deleteCustomer}\n              setCustomer={setCustomer}\n            />\n          ))\n        : customers.map((data) => (\n            <CustomerItem\n              key={data.id}\n              _id={data.id}\n              first_name={data.first_name}\n              last_name={data.last_name}\n              email={data.email}\n              phone={data.phone}\n              address={data.address}\n              address2={data.address2}\n              city={data.city}\n              state={data.state}\n              zip={data.zip}\n              deleteCustomer={deleteCustomer}\n              setCustomer={setCustomer}\n            />\n          ))}\n    </div>\n    </InfiniteScroll>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  state: state.customer,\n});\n\nexport default connect(mapStateToProps, {\n  getCustomers,\n  deleteCustomer,\n  setCustomer,\n  filterCustomers,\n  clearFilter,\n})(Customers);\n"]},"metadata":{},"sourceType":"module"}