{"ast":null,"code":"var _jsxFileName = \"/Users/mbowler/Desktop/card copy/client/src/components/contacts/Contacts.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getCustomers, deleteCustomer, setCustomer, filterContact, clearFilter } from '../../redux/actions/contactActions';\nimport CustomerItem from './CustomerItem';\nimport PreLoader from '../layouts/PreLoader';\nimport CustomerFilter from './CustomerFilter';\n\nconst Customers = ({\n  state: {\n    customers,\n    loading,\n    filtered\n  },\n  getCustomers,\n  deleteContact,\n  filterCustomers,\n  clearFilter,\n  setCustomer\n}) => {\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading || customers === []) {\n    return /*#__PURE__*/React.createElement(PreLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \"Please add a contact...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomerFilter, {\n    filterContacts: filterContacts,\n    clearFilter: clearFilter,\n    filtered: filtered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), filtered !== null ? filtered.map(data => /*#__PURE__*/React.createElement(CustomerItem, {\n    key: data.id,\n    _id: data.id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    address: data.address,\n    address2: data.address2,\n    city: data.city,\n    state: data.state,\n    state: data.zip,\n    email: data.email,\n    phone: data.phone,\n    deleteCustomer: deleteCustomer,\n    setContact: setContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })) : contacts.map(data => /*#__PURE__*/React.createElement(CustomerItem, {\n    key: data.id,\n    _id: data.id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    email: data.email,\n    phone: data.phone,\n    address: data.address,\n    address2: data.address2,\n    city: data.city,\n    state: data.state,\n    state: data.zip,\n    deleteContact: deleteCustomer,\n    setCustomer: setCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  state: state.contact\n});\n\nexport default connect(mapStateToProps, {\n  getCustomers,\n  deleteContact,\n  setCustomer,\n  filterCustomers,\n  clearFilter\n})(Customers);","map":{"version":3,"sources":["/Users/mbowler/Desktop/card copy/client/src/components/contacts/Contacts.js"],"names":["React","useEffect","connect","getCustomers","deleteCustomer","setCustomer","filterContact","clearFilter","CustomerItem","PreLoader","CustomerFilter","Customers","state","customers","loading","filtered","deleteContact","filterCustomers","getContacts","contacts","length","display","flexDirection","filterContacts","map","data","id","first_name","last_name","address","address2","city","zip","email","phone","setContact","mapStateToProps","contact"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport { \n    getCustomers, \n    deleteCustomer,\n    setCustomer,\n    filterContact,\n    clearFilter,\n} from '../../redux/actions/contactActions'\nimport CustomerItem from './CustomerItem'\nimport PreLoader from '../layouts/PreLoader'\nimport CustomerFilter from './CustomerFilter'\n\nconst Customers = ({state: {customers, loading, filtered}, getCustomers, deleteContact, filterCustomers, clearFilter, setCustomer}) => {\n    useEffect(()=>{\n        getContacts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    if(loading || customers === []){\n        return <PreLoader/>\n    }\n\n    if(contacts.length === 0){\n        return <h4 className=\"loader\">Please add a contact...</h4>\n    }\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <CustomerFilter\n                filterContacts={filterContacts}\n                clearFilter={clearFilter}\n                filtered={filtered}\n            />\n            {filtered !== null ? filtered.map(data => (\n                <CustomerItem key={data.id}\n                    _id={data.id}\n                    first_name={data.first_name}\n                    last_name={data.last_name}\n                    address={data.address}\n                    address2={data.address2}\n                    city={data.city}\n                    state={data.state}\n                    state={data.zip}\n                    email={data.email}\n                    phone={data.phone}\n                    deleteCustomer={deleteCustomer}\n                    setContact={setContact}\n                />\n            )) : contacts.map(data => (\n                <CustomerItem key={data.id}\n                    _id={data.id}\n                    first_name={data.first_name}\n                    last_name={data.last_name}\n                    email={data.email}\n                    phone={data.phone}\n                    address={data.address}\n                    address2={data.address2}\n                    city={data.city}\n                    state={data.state}\n                    state={data.zip}\n                    deleteContact={deleteCustomer}\n                    setCustomer={setCustomer}\n                />\n            ))}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    state: state.contact,\n});\n\nexport default connect(mapStateToProps, {getCustomers, deleteContact, setCustomer, filterCustomers, clearFilter})(Customers)\n"]},"metadata":{},"sourceType":"module"}