{"ast":null,"code":"var _jsxFileName = \"/Users/mbowler/Desktop/card copy/client/src/components/contacts/Contacts.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getContacts, deleteContact, setContact, filterContacts, clearFilter } from '../../redux/actions/contactActions';\nimport ContactItem from './ContactItem';\nimport PreLoader from '../layouts/PreLoader';\nimport ContactFilter from './ContactFilter';\n\nconst Contacts = ({\n  state: {\n    contacts,\n    loading,\n    filtered\n  },\n  getContacts,\n  deleteContact,\n  filterContacts,\n  clearFilter,\n  setContact\n}) => {\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading || contacts === []) {\n    return /*#__PURE__*/React.createElement(PreLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \"Please add a contact...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContactFilter, {\n    filterContacts: filterContacts,\n    clearFilter: clearFilter,\n    filtered: filtered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), filtered !== null ? filtered.map(data => /*#__PURE__*/React.createElement(ContactItem, {\n    key: data.id,\n    _id: data.id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    address: data.address,\n    address2: data.address2,\n    city: data.city,\n    state: data.address2,\n    email: data.email,\n    phone: data.phone,\n    deleteCustomer: deleteCustomer,\n    setContact: setContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })) : contacts.map(data => /*#__PURE__*/React.createElement(ContactItem, {\n    key: data.id,\n    _id: data.id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    email: data.email,\n    phone: data.phone,\n    address: data.address,\n    address2: data.address2,\n    deleteContact: deleteCustomer,\n    setCustomer: setCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  state: state.contact\n});\n\nexport default connect(mapStateToProps, {\n  getContacts,\n  deleteContact,\n  setContact,\n  filterContacts,\n  clearFilter\n})(Contacts);","map":{"version":3,"sources":["/Users/mbowler/Desktop/card copy/client/src/components/contacts/Contacts.js"],"names":["React","useEffect","connect","getContacts","deleteContact","setContact","filterContacts","clearFilter","ContactItem","PreLoader","ContactFilter","Contacts","state","contacts","loading","filtered","length","display","flexDirection","map","data","id","first_name","last_name","address","address2","city","email","phone","deleteCustomer","setCustomer","mapStateToProps","contact"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport { \n    getContacts, \n    deleteContact,\n    setContact,\n    filterContacts,\n    clearFilter,\n} from '../../redux/actions/contactActions'\nimport ContactItem from './ContactItem'\nimport PreLoader from '../layouts/PreLoader'\nimport ContactFilter from './ContactFilter'\n\nconst Contacts = ({state: {contacts, loading, filtered}, getContacts, deleteContact, filterContacts, clearFilter, setContact}) => {\n    useEffect(()=>{\n        getContacts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    if(loading || contacts === []){\n        return <PreLoader/>\n    }\n\n    if(contacts.length === 0){\n        return <h4 className=\"loader\">Please add a contact...</h4>\n    }\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <ContactFilter\n                filterContacts={filterContacts}\n                clearFilter={clearFilter}\n                filtered={filtered}\n            />\n            {filtered !== null ? filtered.map(data => (\n                <ContactItem key={data.id}\n                    _id={data.id}\n                    first_name={data.first_name}\n                    last_name={data.last_name}\n                    address={data.address}\n                    address2={data.address2}\n                    city={data.city}\n                    state={data.address2}\n                    email={data.email}\n                    phone={data.phone}\n                    deleteCustomer={deleteCustomer}\n                    setContact={setContact}\n                />\n            )) : contacts.map(data => (\n                <ContactItem key={data.id}\n                    _id={data.id}\n                    first_name={data.first_name}\n                    last_name={data.last_name}\n                    email={data.email}\n                    phone={data.phone}\n                    address={data.address}\n                    address2={data.address2}\n                    deleteContact={deleteCustomer}\n                    setCustomer={setCustomer}\n                />\n            ))}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    state: state.contact,\n});\n\nexport default connect(mapStateToProps, {getContacts, deleteContact, setContact, filterContacts, clearFilter})(Contacts)\n"]},"metadata":{},"sourceType":"module"}