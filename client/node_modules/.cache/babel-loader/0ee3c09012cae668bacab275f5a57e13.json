{"ast":null,"code":"var _jsxFileName = \"/Users/mbowler/Desktop/customerkeeper/client/src/components/customers/CustomerFilter.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport \"../../styles/customerFilter.css\";\n\nconst CustomerFilter = ({\n  filterCustomers,\n  clearFilter,\n  filtered\n}) => {\n  const text = useRef(\"\"); // useRef is like a “box” that can hold a mutable value in its .current property.\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = \"\";\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== \"\") {\n      filterCustomers(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: text,\n    type: \"text\",\n    id: \"customer-filter\",\n    onChange: onChange,\n    className: \"form-control\",\n    placeholder: \"Search Customers...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CustomerFilter;","map":{"version":3,"sources":["/Users/mbowler/Desktop/customerkeeper/client/src/components/customers/CustomerFilter.js"],"names":["React","useRef","useEffect","CustomerFilter","filterCustomers","clearFilter","filtered","text","current","value","onChange","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,iCAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,CAAD,KAAgD;AACrE,QAAMC,IAAI,GAAGN,MAAM,CAAC,EAAD,CAAnB,CADqE,CAErE;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,KAAK,IAAjB,EAAuB;AACrBC,MAAAA,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIJ,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BL,MAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASH,KAAV,CAAf;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW;AACZ;AACF,GAND;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEE,IADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,iBAHL;AAIE,IAAA,QAAQ,EAAEG,QAJZ;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,qBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CA5BD;;AA8BA,eAAeP,cAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport \"../../styles/customerFilter.css\";\n\nconst CustomerFilter = ({ filterCustomers, clearFilter, filtered }) => {\n  const text = useRef(\"\");\n  // useRef is like a “box” that can hold a mutable value in its .current property.\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = \"\";\n    }\n  });\n\n  const onChange = (e) => {\n    if (text.current.value !== \"\") {\n      filterCustomers(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n  return (\n    <form>\n      <input\n        ref={text}\n        type=\"text\"\n        id=\"customer-filter\"\n        onChange={onChange}\n        className=\"form-control\"\n        placeholder=\"Search Customers...\"\n      />\n    </form>\n  );\n};\n\nexport default CustomerFilter;\n"]},"metadata":{},"sourceType":"module"}