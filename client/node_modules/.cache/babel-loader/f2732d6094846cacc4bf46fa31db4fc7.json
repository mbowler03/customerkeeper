{"ast":null,"code":"import { GET_CUSTOMER, SET_LOADING, ADD_CUSTOMER, SET_LOADINGFORM, DELETE_CUSTOMER, SET_CUSTOMER, CLEAR_CURRENT, FILTER_CUSTOMERS, CLEAR_FILTER } from \"../types\";\nconst initialState = {\n  customers: [],\n  current: null,\n  filtered: null,\n  loading: false,\n  loadingForm: false,\n  error_msg: ''\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_CUSTOMERS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CUSTOMER:\n      return { ...state,\n        contacts: [action.payload, ...state.contacts],\n        loadingForm: false\n      };\n\n    case DELETE_CUSTOMER:\n      return { ...state,\n        contacts: state.contacts.filter(current => current.id !== action.payload)\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_CCUSTOMER:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SET_LOADINGFORM:\n      return { ...state,\n        loadingForm: true\n      };\n\n    case FILTER_CUSTOMERS:\n      return { ...state,\n        filtered: state.customers.filter(customer => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mbowler/Desktop/card copy/client/src/redux/reducers/contact.js"],"names":["GET_CUSTOMER","SET_LOADING","ADD_CUSTOMER","SET_LOADINGFORM","DELETE_CUSTOMER","SET_CUSTOMER","CLEAR_CURRENT","FILTER_CUSTOMERS","CLEAR_FILTER","initialState","customers","current","filtered","loading","loadingForm","error_msg","state","action","type","GET_CUSTOMERS","contacts","payload","filter","id","SET_CCUSTOMER","customer","regex","RegExp","contact","name","match","email"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAEiBC,YAFjB,EAGIC,eAHJ,EAIIC,eAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,gBAPJ,EAQIC,YARJ,QAQuB,UARvB;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,QAAQ,EAAE,IAHO;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,WAAW,EAAE,KALI;AAMjBC,EAAAA,SAAS,EAAE;AANM,CAArB;AASA,gBAAe,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAgC;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,aAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAFd;AAGHR,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,YAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHI,QAAAA,QAAQ,EAAE,CAACH,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACI,QAA1B,CAFP;AAGHN,QAAAA,WAAW,EAAE;AAHV,OAAP;;AAKJ,SAAKV,eAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeE,MAAf,CAAsBX,OAAO,IAAIA,OAAO,CAACY,EAAR,KAAeN,MAAM,CAACI,OAAvD;AAFR,OAAN;;AAIJ,SAAKpB,WAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKW,aAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHL,QAAAA,OAAO,EAAEM,MAAM,CAACI;AAFb,OAAP;;AAIJ,SAAKf,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ,SAAKP,gBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,QAAQ,EAAEI,KAAK,CAACN,SAAN,CAAgBY,MAAhB,CAAuBG,QAAQ,IAAG;AACxC,gBAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEV,MAAM,CAACI,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOO,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBJ,KAAnB,KAA6BE,OAAO,CAACG,KAAR,CAAcD,KAAd,CAAoBJ,KAApB,CAApC;AACH,SAHS;AAFP,OAAP;;AAOJ,SAAKlB,YAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ;AACI,aAAOI,KAAP;AArDR;AAuDH,CAxDD","sourcesContent":["import { \n    GET_CUSTOMER, \n    SET_LOADING, ADD_CUSTOMER, \n    SET_LOADINGFORM, \n    DELETE_CUSTOMER,\n    SET_CUSTOMER,\n    CLEAR_CURRENT,\n    FILTER_CUSTOMERS,\n    CLEAR_FILTER} from \"../types\"\n\nconst initialState = {\n    customers: [],\n    current: null,\n    filtered: null,\n    loading: false,\n    loadingForm: false,\n    error_msg: '',\n}\n\nexport default (state = initialState, action)=>{\n    switch(action.type){\n        case GET_CUSTOMERS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case ADD_CUSTOMER:\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts],\n                loadingForm: false\n            }\n        case DELETE_CUSTOMER:\n            return{\n                ...state,\n                contacts: state.contacts.filter(current => current.id !== action.payload)\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case SET_CCUSTOMER:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case SET_LOADINGFORM:\n            return {\n                ...state,\n                loadingForm: true\n            }\n        case FILTER_CUSTOMERS:\n            return {\n                ...state,\n                filtered: state.customers.filter(customer =>{\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return contact.name.match(regex) || contact.email.match(regex)\n                })\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}